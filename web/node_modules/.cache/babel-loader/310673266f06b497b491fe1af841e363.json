{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/quizzes/quizzes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport QuizPreview from 'components/portal/quizPreview';\nimport { webHost } from 'config';\nimport Filter from './filter';\nimport Loading from '../loading';\n\nconst Quizzes = ({\n  quizzes,\n  filterByTopic,\n  hasMore,\n  loading\n}) => {\n  _s();\n\n  const observer = useRef();\n  const lastTweetElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) incrementPageNumber();\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !quizzes ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title has-text-weight-light\",\n        children: \"Here are quizzes people have made...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"has-text-grey\",\n        children: \"See quizzes by topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), quizzes && quizzes.map((quiz, idx) => {\n        const url = `${webHost}/quizzes/${quiz.id}`;\n        return /*#__PURE__*/_jsxDEV(QuizPreview, {\n          url: url,\n          quiz: quiz,\n          showCreator: true\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location = \"/create\",\n        style: {\n          marginTop: \"10px\"\n        },\n        className: \"button is-info\",\n        children: \"Create a Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quizzes, \"0NRt5IxLIGf3K+/d1vgNKphdcM4=\");\n\n_c = Quizzes;\nexport default Quizzes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quizzes\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quizzes/quizzes.js"],"names":["React","QuizPreview","webHost","Filter","Loading","Quizzes","quizzes","filterByTopic","hasMore","loading","observer","useRef","lastTweetElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","incrementPageNumber","observe","map","quiz","idx","url","id","window","location","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA;AAAnC,CAAD,KAAkD;AAAA;;AAE9D,QAAMC,QAAQ,GAAGC,MAAM,EAAvB;AAEA,QAAMC,mBAAmB,GAAGC,WAAW,CAACC,IAAI,IAAI;AAE9C,QAAIL,OAAJ,EAAa;AACb,QAAIC,QAAQ,CAACK,OAAb,EAAsBL,QAAQ,CAACK,OAAT,CAAiBC,UAAjB;AAEtBN,IAAAA,QAAQ,CAACK,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AAErD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BX,OAAjC,EACEY,mBAAmB;AAEtB,KALkB,CAAnB;AAOA,QAAIN,IAAJ,EAAUJ,QAAQ,CAACK,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACX,GAbsC,EAapC,CAACL,OAAD,EAAUD,OAAV,CAboC,CAAvC;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEK,CAACF,OAAD,gBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAX,gBAEG;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EASKA,OAAO,IAAIA,OAAO,CAACgB,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,cAAMC,GAAG,GAAI,GAAEvB,OAAQ,YAAWqB,IAAI,CAACG,EAAG,EAA1C;AAEA,4BAAO,QAAC,WAAD;AAAuB,UAAA,GAAG,EAAED,GAA5B;AAAiC,UAAA,IAAI,EAAEF,IAAvC;AAA6C,UAAA,WAAW,EAAE;AAA1D,WAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAJW,CAThB,eAeI;AAAQ,QAAA,OAAO,EAAE,MAAMG,MAAM,CAACC,QAAP,GAAkB,SAAzC;AAAoD,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA3D;AAAgF,QAAA,SAAS,EAAC,gBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA7CD;;GAAMxB,O;;KAAAA,O;AAgDN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport QuizPreview from 'components/portal/quizPreview';\nimport { webHost } from 'config';\nimport Filter from './filter';\nimport Loading from '../loading';\n\nconst Quizzes = ({ quizzes, filterByTopic, hasMore, loading }) => {\n\n    const observer = useRef();\n\n    const lastTweetElementRef = useCallback(node => {\n\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver(entries => {\n\n        if (entries[0].isIntersecting && hasMore) \n          incrementPageNumber();\n        \n      })\n\n      if (node) observer.current.observe(node);\n    }, [loading, hasMore]);\n\n    return(\n        <div className=\"container\">  \n\n            {!quizzes ? <Loading /> :\n            \n                <>\n                    <h3 className=\"title has-text-weight-light\">Here are quizzes people have made...</h3>\n\n                    <h5 className=\"has-text-grey\">See quizzes by topic</h5>\n                    {/*<div style={{maxWidth: \"550px\"}}>\n                        <Filter filterByTopic={filterByTopic} />\n                        <br />\n                    </div>*/}\n\n                    {quizzes && quizzes.map((quiz, idx) => {\n                        const url = `${webHost}/quizzes/${quiz.id}`;\n\n                        return <QuizPreview key={idx} url={url} quiz={quiz} showCreator={true} />\n                    })}\n\n                    <button onClick={() => window.location = \"/create\"} style={{marginTop: \"10px\"}} className=\"button is-info\">Create a Quiz</button>\n                </>\n            }\n\n        </div>\n    )\n}\n\n \nexport default Quizzes;"]},"metadata":{},"sourceType":"module"}