{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mitchell/Projects/quizmaker/web/src/components/quiz/quiz.js\";\nimport React from 'react';\nimport Question from './question';\nimport Loading from '../loading';\n\nconst Quiz = ({\n  quiz,\n  checkAnswers,\n  setAnswer\n}) => {\n  const {\n    topic,\n    questions,\n    creator\n  } = quiz;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: \"3% 0\",\n      maxWidth: \"600px\"\n    },\n    children: !quiz ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Quiz on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: topic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }, this), \" by \", creator]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), questions && questions.map((question, idx) => /*#__PURE__*/_jsxDEV(Question, {\n        number: idx + 1,\n        question: question,\n        setAnswer: setAnswer\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 64\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswers,\n        className: \"button is-info\",\n        children: \"Check Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/mitchell/Projects/quizmaker/web/src/components/quiz/quiz.js"],"names":["React","Question","Loading","Quiz","quiz","checkAnswers","setAnswer","topic","questions","creator","padding","maxWidth","map","question","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AAEhD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,MAAgCL,IAAtC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACM,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,QAAQ,EAAE;AAA5B,KAAlC;AAAA,cAEK,CAACP,IAAD,gBAAQ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAR,gBAED;AAAA,8BACI;AAAA,4CAAY;AAAA,oBAASG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAAZ,UAAyCE,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKD,SAAS,IAAIA,SAAS,CAACI,GAAV,CAAc,CAACC,QAAD,EAAWC,GAAX,kBAAmB,QAAC,QAAD;AAAoB,QAAA,MAAM,EAAEA,GAAG,GAAC,CAAhC;AAAmC,QAAA,QAAQ,EAAED,QAA7C;AAAuD,QAAA,SAAS,EAAEP;AAAlE,SAAeQ,GAAf;AAAA;AAAA;AAAA;AAAA,cAAjC,CAHlB,eAKI;AAAQ,QAAA,OAAO,EAAET,YAAjB;AAA+B,QAAA,SAAS,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlBD;;KAAMF,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport Question from './question';\nimport Loading from '../loading';\n\nconst Quiz = ({ quiz, checkAnswers, setAnswer }) => {\n\n    const { topic, questions, creator } = quiz;\n\n    return(\n        <div className=\"container\" style={{padding: \"3% 0\", maxWidth: \"600px\"}}>\n            \n            {!quiz ? <Loading /> :\n            \n            <>\n                <h3>Quiz on <strong>{topic}</strong> by {creator}</h3>\n\n                {questions && questions.map((question, idx) => <Question key={idx} number={idx+1} question={question} setAnswer={setAnswer} />)}\n\n                <button onClick={checkAnswers} className=\"button is-info\">Check Answers</button>\n            </>}\n        </div>\n    )\n};\n \nexport default Quiz;"]},"metadata":{},"sourceType":"module"}