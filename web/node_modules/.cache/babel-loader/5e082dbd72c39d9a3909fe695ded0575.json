{"ast":null,"code":"import React, { Component, useState, useEffect } from 'react';\nimport { apiHost } from 'config';\nimport axios from 'axios';\nimport Quizzes from './quizzes';\nimport Loading from 'components/loading';\n\nclass QuizzesContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quizzes: [],\n      pageNumber: 0,\n      hasMore: false,\n      loading: true\n    };\n\n    this.fetchQuizzes = async () => {\n      this.setState({\n        loading: true\n      });\n      const requests = [];\n\n      for (let i = 0; i <= this.state.pageNumber; i++) requests.push(axios.get(`${apiHost}/api/quizzes`));\n\n      const responses = await Promise.all(requests);\n      let data = [];\n      responses.forEach(response => data = [...data, ...response.data]);\n      const lastResponseLength = responses[responses.length - 1].data.length;\n      this.setState({\n        hasMore: lastResponseLength === limit\n      });\n      const tweets = data.map(tweet => {\n        return { ...tweet,\n          username: getUsername(tweet.author),\n          timestamp: getTimestamp(tweet.createdAt)\n        };\n      });\n      this.setState({\n        loading: false,\n        tweets: tweets\n      });\n    };\n  }\n\n}\n/*const QuizzesContainer = () => {\n    const [quizzes, setQuizzes] = useState([]);\n\n    const getQuizzes = params => {\n        const config = {}\n\n        if(params)\n            config.params = params;\n\n        axios.get(`${apiHost}/api/quizzes`, config).then(res => {\n            setQuizzes(res.data)\n        });\n    }\n\n    useEffect(getQuizzes, []);\n\n    const filterByTopic = topic => {\n        if(topic === \"\")\n            getQuizzes();\n        else\n            getQuizzes({topic})\n    }\n\n    if(!quizzes) return <Loading />\n\n    return(\n        <div className=\"portal\">\n            <Quizzes quizzes={quizzes} filterByTopic={filterByTopic} />\n        </div>\n    )\n\n}*/\n\n\nexport default QuizzesContainer;","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quizzes/quizzesContainer.js"],"names":["React","Component","useState","useEffect","apiHost","axios","Quizzes","Loading","QuizzesContainer","state","quizzes","pageNumber","hasMore","loading","fetchQuizzes","setState","requests","i","push","get","responses","Promise","all","data","forEach","response","lastResponseLength","length","limit","tweets","map","tweet","username","getUsername","author","timestamp","getTimestamp","createdAt"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,gBAAN,SAA+BP,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCQ,KAFqC,GAE7B;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,UAAU,EAAE,CAFR;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAF6B;;AAAA,SASrCC,YATqC,GAStB,YAAY;AACvB,WAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,YAAMG,QAAQ,GAAG,EAAjB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKR,KAAL,CAAWE,UAAhC,EAA4CM,CAAC,EAA7C,EACID,QAAQ,CAACE,IAAT,CAAcb,KAAK,CAACc,GAAN,CAAW,GAAEf,OAAQ,cAArB,CAAd;;AAEJ,YAAMgB,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,QAAZ,CAAxB;AACA,UAAIO,IAAI,GAAG,EAAX;AACAH,MAAAA,SAAS,CAACI,OAAV,CAAkBC,QAAQ,IAAIF,IAAI,GAAG,CAAC,GAAGA,IAAJ,EAAU,GAAGE,QAAQ,CAACF,IAAtB,CAArC;AAEA,YAAMG,kBAAkB,GAAGN,SAAS,CAACA,SAAS,CAACO,MAAV,GAAiB,CAAlB,CAAT,CAA8BJ,IAA9B,CAAmCI,MAA9D;AACA,WAAKZ,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAEc,kBAAkB,KAAKE;AAAjC,OAAd;AAEA,YAAMC,MAAM,GAAGN,IAAI,CAACO,GAAL,CAASC,KAAK,IAAI;AACrB,eAAO,EAAC,GAAGA,KAAJ;AAAWC,UAAAA,QAAQ,EAAEC,WAAW,CAACF,KAAK,CAACG,MAAP,CAAhC;AAAgDC,UAAAA,SAAS,EAAEC,YAAY,CAACL,KAAK,CAACM,SAAP;AAAvE,SAAP;AACH,OAFM,CAAf;AAIA,WAAKtB,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE,KAAV;AAAiBgB,QAAAA,MAAM,EAAEA;AAAzB,OAAd;AACH,KA5BoC;AAAA;;AAAA;AAiCzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAerB,gBAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { apiHost } from 'config';\nimport axios from 'axios';\nimport Quizzes from './quizzes';\nimport Loading from 'components/loading';\n\nclass QuizzesContainer extends Component {\n\n    state = {\n        quizzes: [],\n        pageNumber: 0,\n        hasMore: false,\n        loading: true\n    };\n\n    fetchQuizzes = async () => {\n        this.setState({loading: true});\n        const requests = [];\n        \n        for (let i = 0; i <= this.state.pageNumber; i++) \n            requests.push(axios.get(`${apiHost}/api/quizzes`, ))\n        \n        const responses = await Promise.all(requests);\n        let data = [];\n        responses.forEach(response => data = [...data, ...response.data])\n\n        const lastResponseLength = responses[responses.length-1].data.length;\n        this.setState({hasMore: lastResponseLength === limit});\n        \n        const tweets = data.map(tweet => {\n                    return {...tweet, username: getUsername(tweet.author), timestamp: getTimestamp(tweet.createdAt)}\n                });\n\n        this.setState({loading: false, tweets: tweets})\n    }\n\n\n}\n\n/*const QuizzesContainer = () => {\n    const [quizzes, setQuizzes] = useState([]);\n\n    const getQuizzes = params => {\n        const config = {}\n\n        if(params)\n            config.params = params;\n\n        axios.get(`${apiHost}/api/quizzes`, config).then(res => {\n            setQuizzes(res.data)\n        });\n    }\n\n    useEffect(getQuizzes, []);\n\n    const filterByTopic = topic => {\n        if(topic === \"\")\n            getQuizzes();\n        else\n            getQuizzes({topic})\n    }\n\n    if(!quizzes) return <Loading />\n\n    return(\n        <div className=\"portal\">\n            <Quizzes quizzes={quizzes} filterByTopic={filterByTopic} />\n        </div>\n    )\n\n}*/\n \nexport default QuizzesContainer;"]},"metadata":{},"sourceType":"module"}