{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/msokol/Projects/quizmaker/web/src/components/quizzes/quizzes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback } from 'react';\nimport QuizPreview from 'components/portal/quizPreview';\nimport { webHost } from 'config';\nimport Filter from './filter';\nimport Loading from '../loading';\n\nconst Quizzes = ({\n  quizzes,\n  filterByTopic,\n  hasMore,\n  loading,\n  incrementPageNumber\n}) => {\n  _s();\n\n  const observer = useRef();\n  const lastQuizElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        console.log(\"hell\");\n        incrementPageNumber();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: !quizzes ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title has-text-weight-light\",\n        children: \"Here are quizzes people have made...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"has-text-grey\",\n        children: \"See quizzes by topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), quizzes && quizzes.map((quiz, idx) => {\n        const url = `${webHost}/quizzes/${quiz.id}`,\n              quizJSX = /*#__PURE__*/_jsxDEV(QuizPreview, {\n          url: url,\n          quiz: quiz,\n          showCreator: true\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 80\n        }, this);\n\n        const css = {\n          margin: \"50px 0\"\n        };\n        if (quizzes.length === idx + 1) return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: css,\n          ref: lastQuizElementRef,\n          children: quizJSX\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: css,\n          children: quizJSX\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location = \"/create\",\n        style: {\n          marginTop: \"10px\"\n        },\n        className: \"button is-info\",\n        children: \"Create a Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Quizzes, \"nOJ4BPuwoyD3PajGLnt53ff8WOU=\");\n\n_c = Quizzes;\nexport default Quizzes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quizzes\");","map":{"version":3,"sources":["/home/msokol/Projects/quizmaker/web/src/components/quizzes/quizzes.js"],"names":["React","useRef","useCallback","QuizPreview","webHost","Filter","Loading","Quizzes","quizzes","filterByTopic","hasMore","loading","incrementPageNumber","observer","lastQuizElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","observe","map","quiz","idx","url","id","quizJSX","css","margin","length","window","location","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,WAAxB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA,OAAnC;AAA4CC,EAAAA;AAA5C,CAAD,KAAuE;AAAA;;AAEnF,QAAMC,QAAQ,GAAGZ,MAAM,EAAvB;AAEA,QAAMa,kBAAkB,GAAGZ,WAAW,CAACa,IAAI,IAAI;AAE7C,QAAIJ,OAAJ,EAAa;AACb,QAAIE,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AAEtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AAErD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BV,OAAjC,EAA0C;AACtCW,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACFV,QAAAA,mBAAmB;AACpB;AACF,KANkB,CAAnB;AAQA,QAAIG,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBO,OAAjB,CAAyBR,IAAzB;AACX,GAdqC,EAcnC,CAACJ,OAAD,EAAUD,OAAV,CAdmC,CAAtC;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEK,CAACF,OAAD,gBAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAX,gBAEG;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EASKA,OAAO,IAAIA,OAAO,CAACgB,GAAR,CAAY,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,cAAMC,GAAG,GAAI,GAAEvB,OAAQ,YAAWqB,IAAI,CAACG,EAAG,EAA1C;AAAA,cAA6CC,OAAO,gBAAG,QAAC,WAAD;AAAuB,UAAA,GAAG,EAAEF,GAA5B;AAAiC,UAAA,IAAI,EAAEF,IAAvC;AAA6C,UAAA,WAAW,EAAE;AAA1D,WAAkBC,GAAlB;AAAA;AAAA;AAAA;AAAA,gBAAvD;;AAEA,cAAMI,GAAG,GAAG;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAZ;AAEA,YAAIvB,OAAO,CAACwB,MAAR,KAAmBN,GAAG,GAAG,CAA7B,EACI,oBACI;AAAK,UAAA,KAAK,EAAEI,GAAZ;AAA2B,UAAA,GAAG,EAAEhB,kBAAhC;AAAA,oBACKe;AADL,WAAsBH,GAAtB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMJ,4BAAO;AAAK,UAAA,KAAK,EAAEI,GAAZ;AAAA,oBAA4BD;AAA5B,WAAsBH,GAAtB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAbW,CAThB,eAwBI;AAAQ,QAAA,OAAO,EAAE,MAAMO,MAAM,CAACC,QAAP,GAAkB,SAAzC;AAAoD,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAA3D;AAAgF,QAAA,SAAS,EAAC,gBAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAvDD;;GAAM5B,O;;KAAAA,O;AA0DN,eAAeA,OAAf","sourcesContent":["import React, { useRef, useCallback } from 'react';\nimport QuizPreview from 'components/portal/quizPreview';\nimport { webHost } from 'config';\nimport Filter from './filter';\nimport Loading from '../loading';\n\nconst Quizzes = ({ quizzes, filterByTopic, hasMore, loading, incrementPageNumber }) => {\n\n    const observer = useRef();\n\n    const lastQuizElementRef = useCallback(node => {\n\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n\n      observer.current = new IntersectionObserver(entries => {\n\n        if (entries[0].isIntersecting && hasMore) {\n            console.log(\"hell\")\n          incrementPageNumber();\n        } \n      })\n\n      if (node) observer.current.observe(node);\n    }, [loading, hasMore]);\n\n    return(\n        <div className=\"container\">  \n\n            {!quizzes ? <Loading /> :\n            \n                <>\n                    <h3 className=\"title has-text-weight-light\">Here are quizzes people have made...</h3>\n\n                    <h5 className=\"has-text-grey\">See quizzes by topic</h5>\n                    {/*<div style={{maxWidth: \"550px\"}}>\n                        <Filter filterByTopic={filterByTopic} />\n                        <br />\n                    </div>*/}\n\n                    {quizzes && quizzes.map((quiz, idx) => {\n                        const url = `${webHost}/quizzes/${quiz.id}`, quizJSX = <QuizPreview key={idx} url={url} quiz={quiz} showCreator={true} />;\n\n                        const css = { margin: \"50px 0\" };\n\n                        if (quizzes.length === idx + 1) \n                            return(\n                                <div style={css} key={idx} ref={lastQuizElementRef}>\n                                    {quizJSX}\n                                </div>\n                            ) \n                        \n                        return <div style={css} key={idx}>{quizJSX}</div>\n                    })}\n\n                    <button onClick={() => window.location = \"/create\"} style={{marginTop: \"10px\"}} className=\"button is-info\">Create a Quiz</button>\n                </>\n            }\n\n        </div>\n    )\n}\n\n \nexport default Quizzes;"]},"metadata":{},"sourceType":"module"}